//namespace BehsamFramework.Mediator
//{
//    public abstract class CommandHandlerWithReturnValue<TCommand, TValue> :
//        object, MediatR.IRequestHandler<TCommand, FluentResults.Result<TValue>>
//        where TCommand : CommandWithoutReturnValue
//    {


//        protected AutoMapper.IMapper Mapper { get; }
//        protected Persistence.IUnitOfWork UnitOfWork { get; }

//        public CommandHandlerWithReturnValue(IMapper mapper, IUnitOfWork unitOfWork):base()
//        {
//            Mapper = mapper;
//            UnitOfWork = unitOfWork;
//        }


//        public abstract
//            System.Threading.Tasks.Task
//            <FluentResults.Result<TValue>>
//            Handle(TCommand request, System.Threading.CancellationToken cancellationToken);
//    }
//}
